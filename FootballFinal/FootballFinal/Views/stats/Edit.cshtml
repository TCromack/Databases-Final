@model FootballFinal.Models.stat

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>stat</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.pointsScored, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pointsScored, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pointsScored, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gamesPlayed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gamesPlayed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gamesPlayed, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Player_playerId)

        <div class="form-group">
            @Html.LabelFor(model => model.rushingTDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushingTDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushingTDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rushingYDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushingYDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushingYDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fumblesLost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fumblesLost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fumblesLost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.receptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.receptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.receptions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.receivingTDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.receivingTDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.receivingTDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.receivingYDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.receivingYDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.receivingYDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passingYDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passingYDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passingYDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passingINTs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passingINTs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passingINTs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passingTDs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passingTDs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passingTDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Week, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Week, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Week, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.statsID)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
